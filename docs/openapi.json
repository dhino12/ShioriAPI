{
    "openapi": "3.0.0",
    "info": {
        "title": "Shiori RESTAPI",
        "description": "a collection of manga, manhwa, manhua in various languages that have been translated",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000/api/v1",
            "description": "localhost"
        },
        {
            "url": "https://a93fcb39-d85b-44de-8aa3-e293a59d532e.mock.pstmn.io/",
            "description": "postman-mock-api"
        }
    ],
    "paths": {
        "/register": {
            "description": "register user",
            "post": {
                "tags": ["Authentication"],
                "summary": "register user",
                "description": "# Register User \nKirim permintaan `POST` dengan format JSON berisi `Request Body` seperti dibawah. `role` akah ditentukan secara otomatis oleh server melalui endpoint ini, endpoint ini akan menjadikannya sebagai `user` secara default",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS REGISTER__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code":{
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "email": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": ["Authentication"],
                "summary": "login user",
                "description": "# Login User \nKirim permintaan `POST` dengan format JSON berisi `username` dan `password` yang valid.\nJika berhasil, server akan mengembalikan token akses (JWT) yang digunakan untuk mengakses endpoint lain yang memerlukan otorisasi. Perlu diperhatikan sebagai berikut:<br><br>__1. Simpan `access_token` Pada Cookie Browser__<br>__2. Gunakan `access_token` untuk request ke setiap endpoint yang terkunci, termasuk ke dokumentasi ini__<br>",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS REGISTER__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code":{
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/LoginResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "description": "list users",
            "get": {
                "tags": ["User API"],
                "summary": "list users",
                "description": "# List Users\nKirim permintaan `GET` dengan membawa `access_token` yang valid untuk endpoint ini, dan akan mendapatkan seluruh data users yang ada di database",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get all users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UsersResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["User API"],
                "summary": "create user",
                "description": "# Create User\nKirim permintaan `POST` dengan membawa `access_token` yang valid untuk endpoint ini",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/UsersResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": ["User API"],
                "summary": "get user by id",
                "description": "# Get User by id\nKirim permintaan `GET` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan mendapatkan detail tentang data diri pengguna itu sendiri.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get users by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/UsersResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["User API"],
                "summary": "update user",
                "description": "# Update User\nKirim permintaan `PUT` dengan membawa `access_token` yang valid untuk endpoint ini",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/UsersResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["User API"],
                "summary": "delete user",
                "description": "# Delete User\nKirim permintaan `DELETE` dengan membawa `access_token` yang valid untuk endpoint ini.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bookmarks": {
            "post": {
                "tags": ["Bookmarks API"],
                "summary": "create bookmark",
                "description": "# Create Bookmark\nKirim permintaan `POST` dengan membawa `access_token` yang valid untuk endpoint ini",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookmarkPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/BookmarkResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bookmarks/{id}": {
            "get": {
                "tags": ["Bookmarks API"],
                "summary": "get bookmark by id",
                "description": "# Get Bookmark by id\nKirim permintaan `GET` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan mendapatkan detail bookmark beserta comic terkait",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get bookmark by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/BookmarkResponseWithComic"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Bookmarks API"],
                "summary": "delete bookmark",
                "description": "# Delete Bookmark\nKirim permintaan `DELETE` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan membatalkan bookmark yang pernah dilakukan user",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}/bookmarks": {
            "get": {
                "tags": ["Bookmarks API"],
                "summary": "list all bookmark by userId",
                "description": "# List Bookmark by userId\nKirim permintaan `GET` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan mendapatkan seluruh bookmark yang pernah dilakukan oleh user.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get all bookmark by userId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BookmarkResponseWithComics"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comics": {
            "get": {
                "tags": ["Comics API"],
                "summary": "list all comics",
                "description": "# List Comics\nKirim permintaan `GET`. Endpoint ini akan mendapatkan seluruh comics beserta attribute dasar, seperti `favorite`, `status`, `type`, dan `genre`",
                "responses": {
                    "200": {
                        "description": "success get all comics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ComicResponseWithGenre"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Comics API"],
                "summary": "create comic",
                "description": "# Create Comic\nKirim permintaan `POST` dengan membawa `access_token` yang valid untuk endpoint ini.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ComicPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code":{
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/ComicResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comics/{id}": {
            "get": {
                "tags": ["Comics API"],
                "summary": "get comic by id",
                "description": "# Get Comic by id\nKirim permintaan `GET`. Endpoint ini akan mendapatkan detail comic beserta dengan attribute pendukung lainnya.<br><br>__‚ö†Ô∏èNote:__ untuk mendapatkan chapter bisa dilakukan dengan fetch / request terpisah",
                "responses": {
                    "200": {
                        "description": "success get comic by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/ComicDetailResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Comics API"],
                "summary": "update comic",
                "description": "# Update Comic\nKirim permintaan `PUT` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan mengubah salah satu comic berdasarkan id.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ComicPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/ComicResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Comics API"],
                "summary": "delete comic",
                "description": "# Delete Comic\nKirim permintaan `DELETE` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan menghapus 1 comic beserta dengan seluruh chapter dan episode yang berkaitan dengan comic tersebut",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chapters": {
            "post": {
                "tags": ["Chapters API"],
                "summary": "create chapter",
                "description": "# Create Chapter\nKirim permintaan `POST` dengan membawa `access_token` yang valid untuk endpoint ini.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChapterPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/ChapterResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chapters/{id}": {
            "put": {
                "tags": ["Chapters API"],
                "summary": "update chapter",
                "description": "# Update Chapter\nKirim permintaan `PUT` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan mengubah salah satu chapter.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChapterPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/ChapterResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Chapters API"],
                "summary": "delete chapter",
                "description": "# Delete Chapter\nKirim permintaan `DELETE` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan menghapus 1 chapter beserta dengan seluruh episode yang berkaitan dengan chapter tersebut",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comics/{id}/chapters": {
            "get": {
                "tags": ["Chapters API"],
                "summary": "list all chapter",
                "description": "# List Chapter\nKirim permintaan `GET`. Endpoint ini akan mendapatkan seluruh chapter dalam 1 comic",
                "responses": {
                    "200": {
                        "description": "success get all chapter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ChapterResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comics/{id}/chapters/{chapterId}": {
            "get": {
                "tags": ["Chapters API"],
                "summary": "get chapter by id",
                "description": "# Get Chapter by id\nKirim permintaan `GET`. Endpoint ini akan mendapatkan detail chapter dalam 1 comic",
                "responses": {
                    "200": {
                        "description": "success get chapters by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/ChapterDetailResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/episode": {
            "post": {
                "tags": ["Epsiode API"],
                "summary": "create episode",
                "description": "# Create Episode\nKirim permintaan `POST` dengan membawa `access_token` yang valid untuk endpoint ini.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EpisodePagePayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/EpisodePageResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/episode/{id}": {
            "put": {
                "tags": ["Epsiode API"],
                "summary": "update episode",
                "description": "# Update Episode\nKirim permintaan `PUT` dengan membawa `access_token` yang valid untuk endpoint ini.Endpoint ini akan mengubah 1 gambar (dari seluruh gambar dalam 1 epsiode, pada 1 chapter)",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EpisodePagePayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/EpisodePageResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Epsiode API"],
                "summary": "delete episode",
                "description": "# Delete Episode\nKirim permintaan `DELETE` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan delete 1 gambar (dari seluruh gambar dalam 1 epsiode, pada 1 chapter).",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comics/{id}/chapters/{chapterId}/epsiode": {
            "get": {
                "tags": ["Epsiode API"],
                "summary": "list all epsiode",
                "description": "# List Epsiode\nKirim permintaan `GET`. Endpoint ini akan mendapatkan seluruh epsiode (gambar) dalam 1 chapter",
                "responses": {
                    "200": {
                        "description": "success get all epsiode",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EpisodePagePayload"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comics/{id}/chapters/{chapterId}/epsiode/{episodeId}": {
            "get": {
                "tags": ["Epsiode API"],
                "summary": "get epsiode by id",
                "description": "# Get Epsiode by id\nKirim permintaan `GET`. Endpoint ini akan mendapatkan detail episode (salah satu gambar, dari seluruh gambar dalam 1 chapter. ",
                "responses": {
                    "200": {
                        "description": "success get epsiode by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/EpisodePageResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/creator": {
            "post": {
                "tags": ["Creator API"],
                "summary": "create creator",
                "description": "# Create Creator\nKirim permintaan `POST` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan membuat biodata creator dengan type berbagai macam seperti illustrator, story, dll.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatorPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code":{
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/CreatorResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Creator API"],
                "summary": "list all creator",
                "description": "# List Creator\nKirim permintaan `GET`. Endpoint ini akan mendapatkan seluruh daftar creator, dari berbagai macam type (illustrator, story, dll). ",
                "responses": {
                    "200": {
                        "description": "success get all creator",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CreatorResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/creator/{id}": {
            "get": {
                "tags": ["Creator API"],
                "summary": "get creator by id",
                "description": "# Get Creator by id\nKirim permintaan `GET`. Endpoint ini akan mendapatkan detail comic yang pernah digarap / dibuat oleh creator ini. ",
                "responses": {
                    "200": {
                        "description": "success get creator by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/CreatorWithCreationResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Creator API"],
                "summary": "update creator",
                "description": "# Update Creator\nKirim permintaan `PUT` dengan membawa `access_token` yang valid untuk endpoint ini.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatorPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/CreatorResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Creator API"],
                "summary": "delete creator",
                "description": "# Delete Creator\nKirim permintaan `DELETE` dengan membawa `access_token` yang valid untuk endpoint ini.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/genre": {
            "post": {
                "tags": ["Genre API"],
                "summary": "create genre",
                "description": "# Create Genre",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenrePayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code":{
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/GenreResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Genre API"],
                "summary": "list all genre",
                "description": "# List Genre\nKirim permintaan `GET`. Endpoint ini akan mendapatkan seluruh genre. ",
                "responses": {
                    "200": {
                        "description": "success get all genre",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/GenreResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/genre/{id}": {
            "get": {
                "tags": ["Genre API"],
                "summary": "get genre by id",
                "description": "# Get Genre by id\nKirim permintaan `GET`. Endpoint ini akan mendapatkan detail genre. <br><br>__‚ö†Ô∏è Note:__ untuk mendapatkan Comic, bisa dilakukan fetch / request api terpisah dari endpoint ini, `(logikanya, user akan klik salah satu genre, dan akan mendapatkan comic berdasarkan genre secara terpisah ü§î‚ùì)`.",
                "responses": {
                    "200": {
                        "description": "success get genre by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/GenreResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Genre API"],
                "summary": "update genre",
                "description": "update genre",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenrePayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/GenreResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Genre API"],
                "summary": "delete genre",
                "description": "delete genre",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/favorite": {
            "get": {
                "tags": ["Favorite API"],
                "summary": "list all favorite",
                "description": "# List Favorite\nKirim permintaan `GET` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan mendapatkan seluruh comic yang pernah disukai user",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get all favorite",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FavoriteWithComicResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Favorite API"],
                "summary": "create favorite",
                "description": "# Create Favorite\nKirim permintaan `POST` dengan membawa `access_token` yang valid untuk endpoint ini",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FavoritePayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code":{
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/FavoriteResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/favorite/{id}": {
            "get": {
                "tags": ["Favorite API"],
                "summary": "get favorite by id",
                "description": "# Get Favorite by id\nKirim permintaan `GET` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan mendapatkan salah satu comic yang pernah disukai user",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get favorite by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/FavoriteWithComicResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Favorite API"],
                "summary": "update favorite",
                "description": "# Update Favorite\nKirim permintaan `PUT` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini sepertinya tidak begitu penting ü§î",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FavoritePayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/FavoriteResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Favorite API"],
                "summary": "delete favorite",
                "description": "# Delete Favorite\nKirim permintaan `DELETE` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan membatalkan suatu comic yang pernah disukai user.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rating": {
            "post": {
                "tags": ["Rating API"],
                "summary": "create rating",
                "description": "# Create Rating\nKirim permintaan `POST` dengan membawa `access_token` yang valid untuk endpoint ini",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RatingPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code":{
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/RatingResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Rating API"],
                "summary": "list all rating",
                "description": "# List Rating\nKirim permintaan `GET` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan menampilkan seluruh rating yang pernah dibuat salah satu user yang sudah login.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get all rating",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RatingWithComicResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rating/{id}": {
            "put": {
                "tags": ["Rating API"],
                "summary": "update rating",
                "description": "# Update Rating\nKirim permintaan `PUT` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan menghapus rating yang pernah dibuat user, dan ini akan berdampak terhadap rating comic (tergantung jumlah user yang membuat rating pada comic tersebut)",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RatingPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/RatingResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Rating API"],
                "summary": "delete rating",
                "description": "# Delete Rating\nKirim permintaan `DELETE` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan menghapus rating yang pernah dibuat user, dan ini akan berdampak terhadap rating comic (tergantung jumlah user yang membuat rating pada comic tersebut)",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscription": {
            "post": {
                "tags": ["Subscription API"],
                "summary": "create subscription",
                "description": "# Create Subscription\nKirim permintaan `POST` dengan membawa `access_token` yang valid untuk endpoint ini, user akan mengikuti perkembangan comic ini",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code":{
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/SubscriptionResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["Subscription API"],
                "summary": "list all subscription",
                "description": "# List Subscription\nKirim permintaan `GET` dengan membawa `access_token` yang valid untuk endpoint ini, ini akan mendapatkan seluruh `subscription` yang pernah dilakukan oleh users terhadap suatu comic",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get all subscription",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubscriptionWithComicResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscription/{id}": {
            "delete": {
                "tags": ["Subscription API"],
                "summary": "delete subscription",
                "description": "# Delete Subscription\nKirim permintaan `DELETE` dengan membawa `access_token` yang valid untuk endpoint ini. Endpoint ini akan __unsubscribe__ comic yang sudah pernah diikuti user",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/history": {
            "post": {
                "tags": ["History API"],
                "summary": "create history",
                "description": "# Create History\n‚ö†Ô∏è ini dilakukan di backend, ketika user mengunjungi salah satu chapter, ini akan di create",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HistoryPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code":{
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/HistoryResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["History API"],
                "summary": "list history",
                "description": "# List History\n\nKirim permintaan `GET` dengan membawa `access_token` yang valid untuk endpoint ini, ini akan mendapatkan seluruh comic/chapter yang pernah dibuka oleh users.<br><br>__‚ö†Ô∏è Note:__ Jika field `chapter_id` kosong, berarti user hanya membuka halaman comic, jika terisi semua maka user membuka sampai membaca chapter, `comic_id` wajib terisi",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get all history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/HistoryWithComicResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/history/{id}": {
            "delete": {
                "tags": ["History API"],
                "summary": "delete history",
                "description": "# Delete History\n‚ö†Ô∏è ini dilakukan di backend, ketika user tidak mengunjungi chapter ini dalam waktu 1 tahun, ini akan di hapus",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comment": {
            "post": {
                "tags": ["Comment API"],
                "summary": "create comment",
                "description": "# Create Comment",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code":{
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/CommentResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chapters/{id}/comment": {
            "get": {
                "tags": ["Comment API"],
                "summary": "list all comment by chapterId",
                "description": "# List Comment by chapterId\nKirim permintaan `GET` untuk mendapatkan seluruh komentar yang ada di setiap chapter",
                "responses": {
                    "200": {
                        "description": "success get all comment by chapterId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CommentResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}/comment": {
            "get": {
                "tags": ["Comment API"],
                "summary": "list all comment by userId",
                "description": "# List comment by userId\nKirim permintaan `GET` dengan membawa `access_token` yang valid untuk endpoint ini, endpoint ini akan mendapatkan semua komentar yang pernah dilakukan user di semua chapter",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success get all comment by userId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CommentWithChapterPayload"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comment/{id}": {
            "put": {
                "tags": ["Comment API"],
                "summary": "update comment",
                "description": "# Update Comment\nKirim permintaan `PUT` dengan membawa `access_token` yang valid untuk endpoint ini, `Request Body` bisa memilih beberapa field yang kosong, tanpa mengisi keseluruhan field json.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/CommentResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Comment API"],
                "summary": "delete comment",
                "description": "# Delete Comment\nKirim permintaan `DELETE` dengan membawa `access_token` yang valid untuk endpoint ini.",
                "security": [{
                    "UserAuth": []
                }],
                "parameters": [
                    {
                        "name": "TOKEN",
                        "example": "Bearer <JWT_TOKEN>",
                        "in": "header",
                        "description": "__üîê JWT TOKEN AS ACCESS_TOKEN__"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "__‚úÖ SUCCESS__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "__‚ö†Ô∏è üü° Bad Request (validation failed)__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "__‚ö†Ô∏è üü° Not Found__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "__‚ö†Ô∏è üü° Unauthorized__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "__‚õî‚ùåüõë INTERNAL SERVER ERROR__",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "UserAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "TOKEN",
                "description": "Authentication for users API"
            }
        },
        "schemas": {
            "RegisterPayload": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "LoginPayload": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "UserPayload": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    }
                }
            },
            "RatingPayload": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "score": {
                        "type": "number",
                        "maximum": 10
                    },
                    "created_at": {
                        "type": "string"
                    }
                }
            },
            "SubscriptionPayload": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "subscribed_at": {
                        "type": "number",
                        "maximum": 10
                    }
                }
            },
            "FavoritePayload": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    }
                }
            },
            "GenrePayload": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "CreatorPayload": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "BookmarkPayload": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    }
                }
            },
            "EpisodePagePayload": {
                "type": "object",
                "properties": {
                    "chapter_id": {
                        "type": "string"
                    },
                    "image_url": {
                        "type": "string"
                    },
                    "page_number": {
                        "type": "number"
                    }
                }
            },
            "ComicPayload": {
                "type": "object",
                "properties": {
                    "type_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "ChapterPayload": {
                "type": "object",
                "properties": {
                    "comic_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "number_chapter": {
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "published_at": {
                        "type": "string",
                        "description": "optional",
                        "nullable": true
                    }
                }
            },
            "CommentPayload": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "chapter_id": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "number"
                    }
                }
            },
            "HistoryPayload": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "chapter_id": {
                        "type": "string"
                    },
                    "read_at": {
                        "type": "number",
                        "maximum": 10
                    }
                }
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "access_token": {
                        "type": "string"
                    },
                    "refresh_token": {
                        "type": "string"
                    }
                }
            },
            "UsersResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    }
                }
            },
            "CommentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "chapter_id": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "number"
                    }
                }
            },
            "CommentWithChapterPayload": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "chapter_id": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "number"
                    },
                    "chapter": {
                        "type": "object",
                        "$ref": "#/components/schemas/ChapterResponse"
                    }
                }
            },
            "HistoryResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "chapter_id": {
                        "type": "string"
                    },
                    "read_at": {
                        "type": "number",
                        "maximum": 10
                    }
                }
            },
            "HistoryWithComicResponse": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "chapter_id": {
                        "type": "string"
                    },
                    "read_at": {
                        "type": "number",
                        "maximum": 10
                    },
                    "comic": {
                        "type": "object",
                        "$ref": "#/components/schemas/ComicResponse"
                    },
                    "chapter": {
                        "type": "object",
                        "$ref": "#/components/schemas/ChapterResponse"
                    }
                }
            },
            "SubscriptionResponse": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "subscribed_at": {
                        "type": "number",
                        "maximum": 10
                    }
                }
            },
            "SubscriptionWithComicResponse": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "subscribed_at": {
                        "type": "number",
                        "maximum": 10
                    },
                    "comic": {
                        "type": "object",
                        "$ref": "#/components/schemas/ComicResponseWithGenre"
                    }
                }
            },
            "FavoriteWithComicResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "comic": {
                        "type": "object",
                        "$ref": "#/components/schemas/ComicResponseWithGenre"
                    }
                }
            },
            "FavoriteResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    }
                }
            },
            "RatingWithComicResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "score": {
                        "type": "number"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "comic": {
                        "type": "object",
                        "$ref": "#/components/schemas/ComicResponse"
                    }
                }
            },
            "RatingResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "score": {
                        "type": "number"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                }
            },
            "GenreResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "TypeResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "CreatorWithCreationResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "comics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ComicResponseWithGenre"
                        }
                    }
                }
            },
            "CreatorResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "EpisodePageResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "chapter_id": {
                        "type": "string"
                    },
                    "image_url": {
                        "type": "string"
                    },
                    "page_number": {
                        "type": "number"
                    }
                }
            },
            "ChapterDetailResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "number_chapter": {
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "published_at": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "episode_page": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EpisodePageResponse"
                        }
                    }
                }
            },
            "ChapterResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "number_chapter": {
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "published_at": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                }
            },
            "ComicDetailResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "favorite": {
                        "type": "number"
                    },
                    "rating": {
                        "type": "number"
                    },
                    "type": {
                        "type": "object",
                        "$ref": "#/components/schemas/TypeResponse"
                    },
                    "creator": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreatorResponse"
                        }
                    },
                    "genre": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GenreResponse"
                        }
                    }
                }
            },
            "ComicResponseWithGenre": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "thumbnail_url": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "favorite": {
                        "type": "number"
                    },
                    "genre": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GenreResponse"
                        }
                    }
                }
            },
            "ComicResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                }
            },
            "BookmarkResponse": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    }
                }
            },
            "BookmarkResponseWithComic": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "comics": {
                        "type": "object",
                        "$ref": "#/components/schemas/ComicResponse"
                    }
                }
            },
            "BookmarkResponseWithComics": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "comic_id": {
                        "type": "string"
                    },
                    "comics": {
                        "type": "array",
                        "$ref": "#/components/schemas/ComicResponse"
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "number"
                    },
                    "data": {
                        "type": "object"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            }
        }
    }
}